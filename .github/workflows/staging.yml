name: Staging
on:
  push:
    branches:
      - staging
      - github-actions
env:
  DOCKER_CLI_EXPERIMENTAL: enabled
  DOCKER_LOGIN: kickermercdev
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Define var
        run: |
          echo "::set-env name=IMAGE_NAME::${DOCKER_LOGIN}/kicker-frontend"
          echo "::set-env name=PACKAGE_VERSION::$(sed -nE 's/^\s*"version": "(.*?)",$/\1/p' package.json)"

      - name: Build the Docker container image
        run: |
          echo $IMAGE_NAME
          echo $PACKAGE_VERSION
          docker build \
           --cache-from ${IMAGE_NAME}:staging-latest \
           --build-arg NODE_ENV=staging \
           -t ${IMAGE_NAME}:staging-$PACKAGE_VERSION \
           -t ${IMAGE_NAME}:staging-latest \
           .

      - name: Push the Docker container image
        run: |
          echo $PACKAGE_VERSION

          docker login --username ${DOCKER_LOGIN} -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push ${IMAGE_NAME}:staging-$PACKAGE_VERSION
          docker push ${IMAGE_NAME}:staging-latest

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    container:
      image: node:10.16-jessie
    steps:
      - uses: actions/checkout@master

      - name: Install exoframe
        run: yarn global add exoframe

      - name: Deploy
        env:
          EXOFRAME_TOKEN: ${{ secrets.STAGING_DEPLOY_TOKEN }}
          EXOFRMAE_DOMAIN: ${{ secrets.EXOFRAME_SERVER }}
        run: |
          exoframe endpoint $EXOFRMAE_DOMAIN
          exoframe deploy -c staging.exoframe.json -t $EXOFRAME_TOKEN -u
